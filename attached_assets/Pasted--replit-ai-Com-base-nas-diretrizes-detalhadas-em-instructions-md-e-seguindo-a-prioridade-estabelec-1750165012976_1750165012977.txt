@replit-ai Com base nas diretrizes detalhadas em `instructions.md` e seguindo a prioridade estabelecida, por favor, inicie a implementação completa do **Módulo de Catálogo de Produtos/Serviços**. Esta tarefa consiste em várias partes principais que devem ser desenvolvidas em sequência:

1.  **Página Principal do Catálogo (`/catalog`)**:
    * Crie/Edite o arquivo `client/src/pages/catalog/index.tsx`.
    * Implemente a listagem de produtos e serviços em um formato de grid (ou tabela, se mais adequado para os dados).
    * Inclua funcionalidades de filtro por tipo (produto/serviço), categoria e busca avançada por nome/descrição.
    * Utilize React, TypeScript e TanStack Query para buscar dados da API `/api/catalog-items`.
    * Adicione um botão para "Adicionar Novo Item" que abrirá o formulário de criação (item 2).
    * Garanta que os itens listados sejam clicáveis para navegar para a página de detalhes (item 3).

2.  **Componente de Formulário de Item do Catálogo**:
    * Crie o componente `client/src/components/catalog/catalog-item-form.tsx`.
    * Desenvolva o formulário para criação e edição de itens do catálogo, utilizando **React Hook Form** e **Zod** para validação.
    * Os campos devem incluir: nome, descrição, tipo (produto/serviço), preço de venda, custo, e um campo para tags/categorias.
    * Prepare o formulário para integração com as APIs `POST /api/catalog-items` e `PUT /api/catalog-items/:id` usando `useMutation`.
    * Integre este formulário em um modal na página de listagem ou em páginas dedicadas de criação (`client/src/pages/catalog/new.tsx`) e edição (`client/src/pages/catalog/edit/[id].tsx`), garantindo que essas páginas sejam criadas se necessário.

3.  **Página de Detalhes do Item do Catálogo**:
    * Crie/Edite o arquivo `client/src/pages/catalog/[id].tsx`.
    * Exiba as informações completas de um item do catálogo específico (utilizando o `id` da URL).
    * Inclua um botão de ação para "Editar Item".

4.  **Rotas Frontend e Backend (se necessário)**:
    * Adicione as rotas necessárias em `client/src/App.tsx` para o catálogo (`/catalog`, `/catalog/new`, `/catalog/edit/:id`, `/catalog/:id`).
    * Verifique se o backend (`server/routes.ts`) possui rotas CRUD completas para `/api/catalog-items` e, se não, crie-as.

5.  **Integração Básica com Ordens de Serviço (Lógica Frontend)**:
    * Embora a integração profunda seja para uma fase posterior, crie um placeholder ou um componente básico que simule a seleção de itens do catálogo ao criar ou editar uma ordem de serviço, e um campo para o cálculo de preço baseado nesses itens. (Isso pode ser um componente pequeno que seria usado nas páginas de ordens de serviço mais tarde).

Certifique-se de seguir rigorosamente os padrões de desenvolvimento, estrutura de arquivos e convenções de nomenclatura definidos em `instructions.md` para todas as partes desta tarefa.

Quando todas as partes desta implementação do Módulo de Catálogo estiverem concluídas, por favor, sinalize com 'CONCLUÍDO'.